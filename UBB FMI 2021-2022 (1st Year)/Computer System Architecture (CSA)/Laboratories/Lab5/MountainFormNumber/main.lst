     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  ; 123421
     9                                  
    10                                  segment data use32 class=data
    11 00000000 1DE20100                	n dd 123421
    12                                  
    13                                  segment code use32 class=code
    14                                      start:
    15 00000000 B900000000              		mov ecx, 0
    16                                  	
    17                                  		extract_digits:
    18 00000005 66A1[00000000]          			mov ax, [n]
    19 0000000B 668B15[02000000]        			mov dx, [n + 2]
    20 00000012 66BB0A00                			mov bx, 10
    21 00000016 66F7F3                  			div bx
    22                                  			
    23 00000019 BB00000000              			mov ebx, 0
    24 0000001E 6689C3                  			mov bx, ax
    25 00000021 891D[00000000]          			mov [n], ebx
    26 00000027 6652                    			push dx
    27                                  			
    28 00000029 83C101                  			add ecx, 1
    29 0000002C 833D[00000000]00        		cmp dword [n], 0
    30 00000033 75D0                    		jne extract_digits
    31                                  		
    32                                  		
    33 00000035 6658                    		pop ax
    34 00000037 83E901                  		sub ecx, 1
    35                                  		
    36                                  		cmp_incr_order:
    37 0000003A 83F900                  		cmp ecx, 0
    38 0000003D 741F                    		je false
    39 0000003F 665B                    			pop bx
    40 00000041 83E901                  			sub ecx, 1
    41 00000044 6639D8                  		cmp ax, bx
    42 00000047 6689D8                  		mov ax, bx
    43 0000004A 7EEE                    		jle cmp_incr_order
    44                                  		
    45                                  		
    46                                  		cmp_decr_order:
    47 0000004C 83F900                  		cmp ecx, 0
    48 0000004F 7414                    		je true
    49 00000051 665B                    			pop bx
    50 00000053 83E901                  			sub ecx, 1
    51 00000056 6639D8                  		cmp ax, bx
    52 00000059 6689D8                  		mov ax, bx
    53 0000005C 7FEE                    		jg cmp_decr_order
    54                                  		
    55                                  		
    56                                  		false:
    57 0000005E B800000000              			mov eax, 0
    58 00000063 EB07                    			jmp result
    59                                  		true:
    60 00000065 B801000000              			mov eax, 1
    61 0000006A EB00                    			jmp result
    62                                  		
    63                                  		result:
    64                                  		; If number is in form of a mountain, edx is 1 else 0!!!
    65                                  		
    66 0000006C 6A00                    		push    dword 0
    67 0000006E FF15[00000000]          		call    [exit]
